/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.1 */

#ifndef PB_DEBUG_PB_H_INCLUDED
#define PB_DEBUG_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _DebugPeekResponse_Status {
    DebugPeekResponse_Status_OK = 0,
    DebugPeekResponse_Status_TOO_MANY_BYTES = 1
} DebugPeekResponse_Status;

typedef enum _DebugWriteVarResponse_Status {
    DebugWriteVarResponse_Status_OK = 0,
    DebugWriteVarResponse_Status_NAME_NOT_FOUND = 1
} DebugWriteVarResponse_Status;

typedef enum _DebugTraceResponse_Status {
    DebugTraceResponse_Status_OK = 0,
    DebugTraceResponse_Status_NAME_NOT_FOUND = 1,
    DebugTraceResponse_Status_TRACE_IN_PROGRESS = 2
} DebugTraceResponse_Status;

/* Struct definitions */
typedef struct _DebugPokeResponse {
    char dummy_field;
} DebugPokeResponse;

typedef struct _DebugReadPrintBufRequest {
    char dummy_field;
} DebugReadPrintBufRequest;

typedef struct _DebugReadPrintBufResponse {
    pb_callback_t data;
} DebugReadPrintBufResponse;

typedef struct _DebugReadVarsRequest {
    char dummy_field;
} DebugReadVarsRequest;

typedef struct _DebugReadVarsResponse {
    pb_callback_t vars;
} DebugReadVarsResponse;

typedef struct _DebugTraceResponse_Sample {
    pb_callback_t vals;
} DebugTraceResponse_Sample;

typedef struct _DebugPeekRequest {
    uint32_t address;
    uint32_t num_bytes;
} DebugPeekRequest;

typedef PB_BYTES_ARRAY_T(64) DebugPeekResponse_data_t;
typedef struct _DebugPeekResponse {
    DebugPeekResponse_Status status;
    DebugPeekResponse_data_t data;
} DebugPeekResponse;

typedef PB_BYTES_ARRAY_T(64) DebugPokeRequest_data_t;
typedef struct _DebugPokeRequest {
    uint32_t address;
    DebugPokeRequest_data_t data;
} DebugPokeRequest;

typedef struct _DebugTraceRequest {
    pb_size_t vars_count;
    char vars[4][32];
    int32_t num_samples;
    int32_t sample_period;
} DebugTraceRequest;

typedef struct _DebugTraceResponse {
    DebugTraceResponse_Status status;
    pb_callback_t vars;
    pb_callback_t samples;
} DebugTraceResponse;

typedef struct _DebugVal {
    pb_size_t which_val;
    union {
        uint32_t val_uint32;
        int32_t val_sint64;
        float val_float;
    } val;
} DebugVal;

typedef struct _DebugWriteVarResponse {
    DebugWriteVarResponse_Status status;
} DebugWriteVarResponse;

typedef struct _DebugReadVarsResponse_Var {
    pb_callback_t name;
    pb_callback_t help;
    DebugVal val;
} DebugReadVarsResponse_Var;

typedef struct _DebugResponse {
    pb_size_t which_response;
    union {
        DebugPeekResponse peek;
        DebugPokeResponse poke;
        DebugReadPrintBufResponse read_print_buf;
        DebugReadVarsResponse read_vars;
        DebugWriteVarResponse write_var;
        DebugTraceResponse trace;
    } response;
} DebugResponse;

typedef struct _DebugWriteVarRequest {
    char name[32];
    DebugVal val;
} DebugWriteVarRequest;

typedef struct _DebugRequest {
    pb_size_t which_request;
    union {
        DebugPeekRequest peek;
        DebugPokeRequest poke;
        DebugReadPrintBufRequest read_print_buf;
        DebugReadVarsRequest read_vars;
        DebugWriteVarRequest write_var;
        DebugTraceRequest trace;
    } request;
} DebugRequest;


/* Helper constants for enums */
#define _DebugPeekResponse_Status_MIN DebugPeekResponse_Status_OK
#define _DebugPeekResponse_Status_MAX DebugPeekResponse_Status_TOO_MANY_BYTES
#define _DebugPeekResponse_Status_ARRAYSIZE ((DebugPeekResponse_Status)(DebugPeekResponse_Status_TOO_MANY_BYTES+1))

#define _DebugWriteVarResponse_Status_MIN DebugWriteVarResponse_Status_OK
#define _DebugWriteVarResponse_Status_MAX DebugWriteVarResponse_Status_NAME_NOT_FOUND
#define _DebugWriteVarResponse_Status_ARRAYSIZE ((DebugWriteVarResponse_Status)(DebugWriteVarResponse_Status_NAME_NOT_FOUND+1))

#define _DebugTraceResponse_Status_MIN DebugTraceResponse_Status_OK
#define _DebugTraceResponse_Status_MAX DebugTraceResponse_Status_TRACE_IN_PROGRESS
#define _DebugTraceResponse_Status_ARRAYSIZE ((DebugTraceResponse_Status)(DebugTraceResponse_Status_TRACE_IN_PROGRESS+1))


/* Initializer values for message structs */
#define DebugRequest_init_default                {0, {DebugPeekRequest_init_default}}
#define DebugResponse_init_default               {0, {DebugPeekResponse_init_default}}
#define DebugVal_init_default                    {0, {0}}
#define DebugPeekRequest_init_default            {0, 0}
#define DebugPeekResponse_init_default           {_DebugPeekResponse_Status_MIN, {0, {0}}}
#define DebugPokeRequest_init_default            {0, {0, {0}}}
#define DebugPokeResponse_init_default           {0}
#define DebugReadPrintBufRequest_init_default    {0}
#define DebugReadPrintBufResponse_init_default   {{{NULL}, NULL}}
#define DebugReadVarsRequest_init_default        {0}
#define DebugReadVarsResponse_init_default       {{{NULL}, NULL}}
#define DebugReadVarsResponse_Var_init_default   {{{NULL}, NULL}, {{NULL}, NULL}, DebugVal_init_default}
#define DebugWriteVarRequest_init_default        {"", DebugVal_init_default}
#define DebugWriteVarResponse_init_default       {_DebugWriteVarResponse_Status_MIN}
#define DebugTraceRequest_init_default           {0, {"", "", "", ""}, 0, 0}
#define DebugTraceResponse_init_default          {_DebugTraceResponse_Status_MIN, {{NULL}, NULL}, {{NULL}, NULL}}
#define DebugTraceResponse_Sample_init_default   {{{NULL}, NULL}}
#define DebugRequest_init_zero                   {0, {DebugPeekRequest_init_zero}}
#define DebugResponse_init_zero                  {0, {DebugPeekResponse_init_zero}}
#define DebugVal_init_zero                       {0, {0}}
#define DebugPeekRequest_init_zero               {0, 0}
#define DebugPeekResponse_init_zero              {_DebugPeekResponse_Status_MIN, {0, {0}}}
#define DebugPokeRequest_init_zero               {0, {0, {0}}}
#define DebugPokeResponse_init_zero              {0}
#define DebugReadPrintBufRequest_init_zero       {0}
#define DebugReadPrintBufResponse_init_zero      {{{NULL}, NULL}}
#define DebugReadVarsRequest_init_zero           {0}
#define DebugReadVarsResponse_init_zero          {{{NULL}, NULL}}
#define DebugReadVarsResponse_Var_init_zero      {{{NULL}, NULL}, {{NULL}, NULL}, DebugVal_init_zero}
#define DebugWriteVarRequest_init_zero           {"", DebugVal_init_zero}
#define DebugWriteVarResponse_init_zero          {_DebugWriteVarResponse_Status_MIN}
#define DebugTraceRequest_init_zero              {0, {"", "", "", ""}, 0, 0}
#define DebugTraceResponse_init_zero             {_DebugTraceResponse_Status_MIN, {{NULL}, NULL}, {{NULL}, NULL}}
#define DebugTraceResponse_Sample_init_zero      {{{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define DebugReadPrintBufResponse_data_tag       1
#define DebugReadVarsResponse_vars_tag           1
#define DebugTraceResponse_Sample_vals_tag       1
#define DebugPeekRequest_address_tag             1
#define DebugPeekRequest_num_bytes_tag           2
#define DebugPeekResponse_status_tag             1
#define DebugPeekResponse_data_tag               2
#define DebugPokeRequest_address_tag             1
#define DebugPokeRequest_data_tag                2
#define DebugTraceRequest_vars_tag               1
#define DebugTraceRequest_num_samples_tag        2
#define DebugTraceRequest_sample_period_tag      3
#define DebugTraceResponse_status_tag            1
#define DebugTraceResponse_vars_tag              2
#define DebugTraceResponse_samples_tag           3
#define DebugVal_val_uint32_tag                  1
#define DebugVal_val_sint64_tag                  2
#define DebugVal_val_float_tag                   3
#define DebugWriteVarResponse_status_tag         1
#define DebugReadVarsResponse_Var_name_tag       1
#define DebugReadVarsResponse_Var_help_tag       2
#define DebugReadVarsResponse_Var_val_tag        3
#define DebugResponse_peek_tag                   2
#define DebugResponse_poke_tag                   3
#define DebugResponse_read_print_buf_tag         4
#define DebugResponse_read_vars_tag              5
#define DebugResponse_write_var_tag              6
#define DebugResponse_trace_tag                  7
#define DebugWriteVarRequest_name_tag            1
#define DebugWriteVarRequest_val_tag             2
#define DebugRequest_peek_tag                    2
#define DebugRequest_poke_tag                    3
#define DebugRequest_read_print_buf_tag          4
#define DebugRequest_read_vars_tag               5
#define DebugRequest_write_var_tag               6
#define DebugRequest_trace_tag                   7

/* Struct field encoding specification for nanopb */
#define DebugRequest_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (request,peek,request.peek),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (request,poke,request.poke),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (request,read_print_buf,request.read_print_buf),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (request,read_vars,request.read_vars),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (request,write_var,request.write_var),   6) \
X(a, STATIC,   ONEOF,    MESSAGE,  (request,trace,request.trace),   7)
#define DebugRequest_CALLBACK NULL
#define DebugRequest_DEFAULT NULL
#define DebugRequest_request_peek_MSGTYPE DebugPeekRequest
#define DebugRequest_request_poke_MSGTYPE DebugPokeRequest
#define DebugRequest_request_read_print_buf_MSGTYPE DebugReadPrintBufRequest
#define DebugRequest_request_read_vars_MSGTYPE DebugReadVarsRequest
#define DebugRequest_request_write_var_MSGTYPE DebugWriteVarRequest
#define DebugRequest_request_trace_MSGTYPE DebugTraceRequest

#define DebugResponse_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (response,peek,response.peek),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (response,poke,response.poke),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (response,read_print_buf,response.read_print_buf),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (response,read_vars,response.read_vars),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (response,write_var,response.write_var),   6) \
X(a, STATIC,   ONEOF,    MESSAGE,  (response,trace,response.trace),   7)
#define DebugResponse_CALLBACK NULL
#define DebugResponse_DEFAULT NULL
#define DebugResponse_response_peek_MSGTYPE DebugPeekResponse
#define DebugResponse_response_poke_MSGTYPE DebugPokeResponse
#define DebugResponse_response_read_print_buf_MSGTYPE DebugReadPrintBufResponse
#define DebugResponse_response_read_vars_MSGTYPE DebugReadVarsResponse
#define DebugResponse_response_write_var_MSGTYPE DebugWriteVarResponse
#define DebugResponse_response_trace_MSGTYPE DebugTraceResponse

#define DebugVal_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    UINT32,   (val,val_uint32,val.val_uint32),   1) \
X(a, STATIC,   ONEOF,    INT32,    (val,val_sint64,val.val_sint64),   2) \
X(a, STATIC,   ONEOF,    FLOAT,    (val,val_float,val.val_float),   3)
#define DebugVal_CALLBACK NULL
#define DebugVal_DEFAULT NULL

#define DebugPeekRequest_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   address,           1) \
X(a, STATIC,   REQUIRED, UINT32,   num_bytes,         2)
#define DebugPeekRequest_CALLBACK NULL
#define DebugPeekRequest_DEFAULT NULL

#define DebugPeekResponse_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    status,            1) \
X(a, STATIC,   REQUIRED, BYTES,    data,              2)
#define DebugPeekResponse_CALLBACK NULL
#define DebugPeekResponse_DEFAULT NULL

#define DebugPokeRequest_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   address,           1) \
X(a, STATIC,   REQUIRED, BYTES,    data,              2)
#define DebugPokeRequest_CALLBACK NULL
#define DebugPokeRequest_DEFAULT NULL

#define DebugPokeResponse_FIELDLIST(X, a) \

#define DebugPokeResponse_CALLBACK NULL
#define DebugPokeResponse_DEFAULT NULL

#define DebugReadPrintBufRequest_FIELDLIST(X, a) \

#define DebugReadPrintBufRequest_CALLBACK NULL
#define DebugReadPrintBufRequest_DEFAULT NULL

#define DebugReadPrintBufResponse_FIELDLIST(X, a) \
X(a, CALLBACK, REQUIRED, STRING,   data,              1)
#define DebugReadPrintBufResponse_CALLBACK pb_default_field_callback
#define DebugReadPrintBufResponse_DEFAULT NULL

#define DebugReadVarsRequest_FIELDLIST(X, a) \

#define DebugReadVarsRequest_CALLBACK NULL
#define DebugReadVarsRequest_DEFAULT NULL

#define DebugReadVarsResponse_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  vars,              1)
#define DebugReadVarsResponse_CALLBACK pb_default_field_callback
#define DebugReadVarsResponse_DEFAULT NULL
#define DebugReadVarsResponse_vars_MSGTYPE DebugReadVarsResponse_Var

#define DebugReadVarsResponse_Var_FIELDLIST(X, a) \
X(a, CALLBACK, REQUIRED, STRING,   name,              1) \
X(a, CALLBACK, REQUIRED, STRING,   help,              2) \
X(a, STATIC,   REQUIRED, MESSAGE,  val,               3)
#define DebugReadVarsResponse_Var_CALLBACK pb_default_field_callback
#define DebugReadVarsResponse_Var_DEFAULT NULL
#define DebugReadVarsResponse_Var_val_MSGTYPE DebugVal

#define DebugWriteVarRequest_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, STRING,   name,              1) \
X(a, STATIC,   REQUIRED, MESSAGE,  val,               2)
#define DebugWriteVarRequest_CALLBACK NULL
#define DebugWriteVarRequest_DEFAULT NULL
#define DebugWriteVarRequest_val_MSGTYPE DebugVal

#define DebugWriteVarResponse_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    status,            1)
#define DebugWriteVarResponse_CALLBACK NULL
#define DebugWriteVarResponse_DEFAULT NULL

#define DebugTraceRequest_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, STRING,   vars,              1) \
X(a, STATIC,   REQUIRED, INT32,    num_samples,       2) \
X(a, STATIC,   REQUIRED, INT32,    sample_period,     3)
#define DebugTraceRequest_CALLBACK NULL
#define DebugTraceRequest_DEFAULT NULL

#define DebugTraceResponse_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    status,            1) \
X(a, CALLBACK, REPEATED, STRING,   vars,              2) \
X(a, CALLBACK, REPEATED, MESSAGE,  samples,           3)
#define DebugTraceResponse_CALLBACK pb_default_field_callback
#define DebugTraceResponse_DEFAULT NULL
#define DebugTraceResponse_samples_MSGTYPE DebugTraceResponse_Sample

#define DebugTraceResponse_Sample_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  vals,              1)
#define DebugTraceResponse_Sample_CALLBACK pb_default_field_callback
#define DebugTraceResponse_Sample_DEFAULT NULL
#define DebugTraceResponse_Sample_vals_MSGTYPE DebugVal

extern const pb_msgdesc_t DebugRequest_msg;
extern const pb_msgdesc_t DebugResponse_msg;
extern const pb_msgdesc_t DebugVal_msg;
extern const pb_msgdesc_t DebugPeekRequest_msg;
extern const pb_msgdesc_t DebugPeekResponse_msg;
extern const pb_msgdesc_t DebugPokeRequest_msg;
extern const pb_msgdesc_t DebugPokeResponse_msg;
extern const pb_msgdesc_t DebugReadPrintBufRequest_msg;
extern const pb_msgdesc_t DebugReadPrintBufResponse_msg;
extern const pb_msgdesc_t DebugReadVarsRequest_msg;
extern const pb_msgdesc_t DebugReadVarsResponse_msg;
extern const pb_msgdesc_t DebugReadVarsResponse_Var_msg;
extern const pb_msgdesc_t DebugWriteVarRequest_msg;
extern const pb_msgdesc_t DebugWriteVarResponse_msg;
extern const pb_msgdesc_t DebugTraceRequest_msg;
extern const pb_msgdesc_t DebugTraceResponse_msg;
extern const pb_msgdesc_t DebugTraceResponse_Sample_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define DebugRequest_fields &DebugRequest_msg
#define DebugResponse_fields &DebugResponse_msg
#define DebugVal_fields &DebugVal_msg
#define DebugPeekRequest_fields &DebugPeekRequest_msg
#define DebugPeekResponse_fields &DebugPeekResponse_msg
#define DebugPokeRequest_fields &DebugPokeRequest_msg
#define DebugPokeResponse_fields &DebugPokeResponse_msg
#define DebugReadPrintBufRequest_fields &DebugReadPrintBufRequest_msg
#define DebugReadPrintBufResponse_fields &DebugReadPrintBufResponse_msg
#define DebugReadVarsRequest_fields &DebugReadVarsRequest_msg
#define DebugReadVarsResponse_fields &DebugReadVarsResponse_msg
#define DebugReadVarsResponse_Var_fields &DebugReadVarsResponse_Var_msg
#define DebugWriteVarRequest_fields &DebugWriteVarRequest_msg
#define DebugWriteVarResponse_fields &DebugWriteVarResponse_msg
#define DebugTraceRequest_fields &DebugTraceRequest_msg
#define DebugTraceResponse_fields &DebugTraceResponse_msg
#define DebugTraceResponse_Sample_fields &DebugTraceResponse_Sample_msg

/* Maximum encoded size of messages (where known) */
#define DebugRequest_size                        157
/* DebugResponse_size depends on runtime parameters */
#define DebugVal_size                            11
#define DebugPeekRequest_size                    12
#define DebugPeekResponse_size                   68
#define DebugPokeRequest_size                    72
#define DebugPokeResponse_size                   0
#define DebugReadPrintBufRequest_size            0
/* DebugReadPrintBufResponse_size depends on runtime parameters */
#define DebugReadVarsRequest_size                0
/* DebugReadVarsResponse_size depends on runtime parameters */
/* DebugReadVarsResponse_Var_size depends on runtime parameters */
#define DebugWriteVarRequest_size                46
#define DebugWriteVarResponse_size               2
#define DebugTraceRequest_size                   154
/* DebugTraceResponse_size depends on runtime parameters */
/* DebugTraceResponse_Sample_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
